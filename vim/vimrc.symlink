syntax enable
colorscheme sfiera

set ruler
set showcmd
set backspace=2
set nocompatible

filetype plugin indent on
set tabstop=4
set softtabstop=0
set shiftwidth=4
set nosmarttab
set expandtab
set autoindent
set cindent
set cinoptions=g2,:2,=2,l1,h2
set textwidth=99

set encoding=utf-8
set termencoding=utf-8

autocmd BufNewFile,BufRead .*Portfile setf tcl

" Stems the given file name, removing the extension as well as any of the
" possible suffices "_unit", "_unittest", or "-inl"
function StemFile(fname)
  let pattern = '\(\([_-]\(unit\)\?test\)\?\(-inl\)\?\)$'
  return substitute(fnamemodify(a:fname, ":r"), pattern, "", "")
endfunction

" This function takes the stem of the current file, then globs for other files
" with the given stem and chooses the next one in sequence (if diff is +1) or
" the previous (if diff is -1).
function MoveFile(diff)
  let fname = expand("%")
  let stem = StemFile(fname)
  let glob = split(glob(stem . "*"), "\n")
  let glob = filter(copy(glob), 'StemFile(v:val) == stem')
  let current = 0
  for g in glob
    if g == fname
      return glob[(current + a:diff) % len(glob)]
    else
      let current = current + 1
    endif
  endfor
endfunction

" Correct some "incorrect" mappings
map Y y$
map S ch

nmap ` :e <C-R>=MoveFile(+1)<CR><CR>
nmap ~ :e <C-R>=MoveFile(-1)<CR><CR>

command Trim :%s/ \+$//
