" I don't think I use any of this anymore

function! BraceCount(line)
  let i = 0
  let cnt = 0
  let line = getline(a:line)
  while i < strlen(line)
    if line[i] == '{'
      let cnt = cnt + 1
    elseif line[i] == '}'
      let cnt = cnt - 1
    endif
    let i = i + 1
  endwhile
  return cnt
endfunction

function! CFold(line)
  let bc = BraceCount(a:line)
  if bc > 0
    return ">".(indent(a:line) / 4 + bc)
  elseif bc < 0
    return "<".(indent(a:line) / 4 - bc)
  elseif getline(a:line+1) =~ '\s'
    return "="
  else
    return indent(a:line) / 4
  endif
endfunction

function NextIndent(line)
  if a:line > line('$')
    return 0
  elseif !(getline(a:line+1) =~ '\s')
    return NextIndent(a:line+1)
  else
    return indent(a:line+1)
  endif
endfunction

function PrevIndent(line)
  if a:line < 0
    return 0
  elseif !(getline(a:line-1) =~ '\s')
    return PrevIndent(a:line-1)
  else
    return indent(a:line-1)
  endif
endfunction

function! XMLFold(line)
  let in = indent(a:line)
  let ni = NextIndent(a:line)
  let pi = PrevIndent(a:line)
  if !(getline(a:line) =~ '\s')
    if (ni > pi)
      return ni/2
    else
      return pi/2
    endif
  elseif in < ni
    return ">".(ni/2)
  elseif in < pi
    return "<".(pi/2)
  endif
  return in/2
endfunction

function! PyFold(line)
  if getline(a:line+1) =~ '\s'
    if indent(a:line) > indent(a:line+2)
      return "<".(indent(a:line+2) / 2 + 1)
    elseif match(getline(a:line),"[^ \t]") == -1
      return "="
    elseif stridx(getline(a:line),':') == -1
      return indent(a:line) / 2
    else
      return ">".(indent(a:line) / 2 + 1)
    endif
  elseif indent(a:line) > indent(a:line+1)
    return "<".(indent(a:line+1) / 2 + 1)
  elseif match(getline(a:line),"[^ \t]") == -1
    return "="
  elseif stridx(getline(a:line),':') == -1
    return indent(a:line) / 2
  else
    return ">".(indent(a:line) / 2 + 1)
  endif
endfunction

" Enable folding by expression in relevant files
"    autocmd Filetype c,cpp,java,php,phtml,named,css,javascript set foldenable foldmethod=expr foldexpr=CFold(v:lnum) foldlevel=100

"    autocmd Filetype python set foldenable foldmethod=expr foldexpr=PyFold(v:lnum) foldlevel=100

"    autocmd Filetype xml,xslt,xhtml,html,smarty set foldenable foldmethod=expr foldexpr=XMLFold(v:lnum) foldlevel=100

map z :foldopen<CR>
map Z :foldclose<CR>

set foldenable foldmethod=indent foldlevel=100
